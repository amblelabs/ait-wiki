# Workflow for building and deploying Hugo sites from multiple branches
name: Deploy Hugo Sites to Pages

on:
  push:
    paths:
      - 'assets/**'
      - 'content/**'
      - 'layouts/**'
      - 'static/**'
      - 'prebuild/**'
      - 'hugo.yaml'

      - '.github/workflows/deploy-pages.yml'

  # Allow manual workflow execution
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

# Ensure only one deployment runs at a time
concurrency:
  group: "pages-deployment"
  cancel-in-progress: true

# Default shell for all steps
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for Hugo .GitInfo and .Lastmod
          submodules: recursive

      # Step 2: Set up Go environment (required by Hugo extended version)
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
      
      - name: Configure Git
        run: |
          git config core.quotepath false
      
      - name: Cache restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys:
            hugo-
      
      - name: Build Hugo site
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo -s prebuild
          hugo \
            --gc --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --cacheDir "${{ runner.temp }}/hugo_cache"
      
      - name: Cache save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

      - name: Run stuff
        run: |
          mkdir -p deploy/${{ github.event.repository.name }}
          cp -r public deploy/${{ github.event.repository.name }}

      - name: Upload Worker Version
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy . --project-name=amblelabs
          workingDirectory: deploy
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
